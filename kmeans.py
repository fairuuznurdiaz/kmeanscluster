# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17cHJiOQu_EIw8ng7rxfIa-Jh40iw84YX
"""

# Library untuk dataframe dan visualisasi
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import datetime as dt
# Import library untuk Clustering
import sklearn
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

# Load dataset SEC
dataset = pd.read_csv('DataSECOK2022.csv', sep=";", encoding="ISO-8859-1", header=0)
dataset.head()

dataset.info()

dataset.describe()

# Rescaling Atribute
clus_data = dataset[['X1', 'X2', 'X3', 'X4','X5','X6','X7','X8']][0:34]
# Instantiate
scaler = StandardScaler()
# fit_transform
clus_data_scaled = scaler.fit_transform(clus_data)
clus_data_scaled.shape

clus_data_scaled

kmeans = KMeans(n_clusters=4, max_iter=50)
kmeans.fit(clus_data_scaled)

# Elbow-curve/SSD
ssd = []
range_n_clusters = [2, 3, 4, 5, 6, 7, 8]
for num_clusters in range_n_clusters:
    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)
    kmeans.fit(clus_data_scaled)
    
    ssd.append(kmeans.inertia_)
    
# plot the SSDs for each n_clusters
plt.plot(ssd)

# Silhouette Analysis
range_n_clusters = [2, 3, 4, 5]
for num_clusters in range_n_clusters:
    
    # Initialise kmeans
    kmeans = KMeans(n_clusters=num_clusters, max_iter=50)
    kmeans.fit(clus_data_scaled)
    cluster_labels = kmeans.labels_
    
    # Silhouette Score
    silhouette_avg = silhouette_score(clus_data_scaled, cluster_labels)
    print("For n_clusters={0}, the silhouette score is {1}".format(num_clusters, silhouette_avg))

kmeans = KMeans(n_clusters=2, max_iter=50)
kmeans.fit(clus_df_scaled)